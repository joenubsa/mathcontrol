<?phprequire __DIR__ . "/../../data/db.php";class administrarUsuarioModel {    private $result;    private $primaryTable;    function __construct($active) {        $active ? true : die('ACCESS DENIED');        $this->dbo = new db();        $this->primaryTable = "usuario";    }    private $dbo;    public function consultar($P) {        if (isset($P['_conse']) && !is_numeric($P['_conse'])){            $this->setResult('Error al consultar el registro', 'error');            return false;        }        $consulta = "";        switch ($P['tipo']) {            case "activo":                $consulta = "select id                        ,concat(nombre, ' ', apellido) as nombre                        ,identificacion                                                ,email                        ,perfil                        "                    . "from $this->primaryTable "                    . "where estado <> 'I'";                 break;            case "formulario":                $consulta = "select * from $this->primaryTable where id=" . $P['_conse'];                break;        }                $this->dbo->conectar();        $res = $this->dbo->consultar($consulta);        $this->dbo->desconectar();                if ($this->dbo->getError() === null){            $this->setResult($res, 'data');        }        else {            $this->setResult("Ha ocurrido un error en la consulta", "error");            return false;        }                return true;    }    public function guardar($P) {        $password = hash('sha256', '');        $consulta = "insert into $this->primaryTable(                                            nombre                                            ,apellido                                            ,identificacion                                            ,usuario                                            ,email                                            ,perfil                                            ,clave                                            ,fechaRegistro                                            ,estado                                            )                              values('" . $P["nombre"] . "',                                            '" . $P["apellido"] . "',                                            '" . $P["identificacion"] . "',                                            '" . $P["email"] . "',                                            '" . $P["email"] . "',                                            '" . $P["perfil"] . "',                                            '" . $password . "',                                            '" . date('Y-m-d') . "',                                            'A'                                            )										                                    ";        echo $consulta;        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al guardar el registro', 'error');        } else {            $this->setResult($this->dbo->getInsertedID(), 'id');        }        $this->dbo->desconectar();        return true;    }    public function editar($P) {         if (!is_numeric($P['id'])){            $this->setResult('No se encuentra identificador', 'error');            return false;        }        $consulta = "update $this->primaryTable set                             nombre = '" . $P['nombre'] . "'                            ,apellido = '" . $P['apellido'] . "'                            ,identificacion = '" . $P['identificacion'] . "'                            ,usuario = '" . $P['email'] . "'                            ,email = '" . $P['email'] . "'                            ,perfil = '" . $P['perfil'] . "'                            ,estado = '" . $P['estado'] . "'            where id= " . $P['id'] . "                    ";        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al editar el registro', 'error');        } else {            $this->setResult($this->dbo->getInsertedID(), 'ok');        }        $this->dbo->desconectar();        return true;    }    public function borrar($P) {        if (!is_numeric($P['id'])){            $this->setResult('Error al borrar el registro', 'error');            return false;        }        $consulta = "update $this->primaryTable set estado = 'I'                                        where id= " . $P['id'] . "                    ";        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al editar el registro', 'error');        } else {            $this->setResult($this->dbo->getInsertedID(), 'ok');        }        $this->dbo->desconectar();    }    public function setResult($output, $type = "message") {        $this->result = [            "type" => $type,            "output" => $output        ];        return true;    }    public function getResult() {        return $this->result;    }}