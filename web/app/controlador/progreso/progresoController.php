<?phpclass progresoController {    private $m;    private $post;    private $response;    private $validateMessage;    private $files;    function __construct($active = FALSE, $accion) {        $active ? true : die('ACCESS DENIED');        $className = (string) __CLASS__;        $className = str_replace("Controller", "Model", $className);        $this->m = new $className(true);        $this->post = $_POST;        $this->files = $_FILES;        $this->$accion();    }    public function consultar() {        $this->m->consultar($this->post);        return $this->Response();    }    public function guardar() {        if (!$this->validar()) {            $this->response = $this->validateMessage;            return $this->Response();        }        $this->m->guardar($this->post);        return $this->Response();    }    public function editar() {        if (!$this->validar()) {            $this->response = $this->validateMessage;            return $this->Response();        }        $res = $this->m->editar($this->post);        return $this->Response();    }    public function borrar() {        $res = $this->m->borrar($this->post);        return $this->Response();    }    private function validar() {        $data = $this->post;        var_dump($data);        if (!isset($data['id'])) {            $this->validateMessage = "No se ha enviado el formulario";            return false;        }        if ($data['nombre'] === "") {            $this->validateMessage = "Debe asignar un nombre completo al usuario";            return false;        }        return true;    }    private function Response($type = null) {        if (!$type) {            $type = $this->m->getResult()['type'];        }        if (!$this->response) {            $this->response = $this->m->getResult()['output'];        }        $response = [            "returned" => $type,            "content" => $this->response        ];        echo json_encode($response);    }    public function ejecutar() {        switch ($this->post["evento"]) {            case "avanzarAction":                $this->avanzarAction();                break;            case "terminarPruebaAction":                $this->terminarPruebaAction();                break;            case "validarModulosCondicionados":                $this->validarModulosCondicionados();                break;            case "guardarForoAction":                $this->guardarForoAction();                break;        }    }    private function avanzarAction() {        if ($this->post["articulo_id"] === "") {            $this->response = "No estás en ningún artículo para poder avanzar";            return $this->Response();        }        $this->m->avanzarAction($this->post);        return $this->Response();    }    private function terminarPruebaAction() {        $this->m->terminarPruebaAction($this->post);        return $this->Response();    }    private function validarModulosCondicionados() {        $this->m->pruebaDiagnosticaOkAction();        return $this->Response();    }        private function guardarForoAction() {        $this->m->guardarForoAction($this->post);        return $this->Response();    }}